1. callback function

A callback function is a function passed into another function as an argument. It is called, or "triggered," once a certain task is completed. For example, when you click a button on a webpage, a callback function might run to handle what happens after the click. It's like giving a set of instructions that will be followed when a specific event happens.


function modifyArray(arr,callback){
    arr.push(100);
    callback();
}

var arr=[1,2,3,4,5];
modifyArray(arr,function(){
    console.log("array has been modified",arr)
})


const data = {
    id:"1"
}

data.id="2";
Object.freeze(data);
data.id="3";
console.log(data.id);


let a=[1,2,3];
let b=[1,2,3];
console.log(a==b);
console.log(a===b);

console.log([]==[]);
console.log([] === [])

const animals=['dog','cat','elephant','horse','sheep','lion','tiger'];

animals.forEach(a=>{
    console.log(a);
    })
    
const newAnimal=animals.map((element)=>{
    const animalUpper = element.toUpperCase();
    return animalUpper;
})

console.log(newAnimal)
newAnimal.forEach(el=>{
    console.log(el);
})

for(const el of animals){
    console.log(el.toUpperCase());
}

let object = {
    1:'hello',
    2:'hey',
    3:'hii'
}

for(const key in object){
    console.log(key);
    console.log(object[key])
}


let arr1 = [1,[2,3,[4,[5,[6,[7]]],[8,[9]]]]];
let arr=[[1,2,3],[4,5,6],[7,8,9]];
const newArr = arr.flat(Infinity);
console.log(newArr);


var x;
console.log(x);
